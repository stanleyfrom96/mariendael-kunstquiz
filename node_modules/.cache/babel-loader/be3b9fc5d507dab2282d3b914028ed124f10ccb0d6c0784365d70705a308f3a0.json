{"ast":null,"code":"export default {\n  props: {\n    buttons: Array,\n    // Array of button objects with label and value\n    radioButton: Boolean // Flag to determine if radio button version should be used\n  },\n\n  data() {\n    return {\n      selectedValue: null\n    };\n  },\n  watch: {\n    selectedValue(newValue) {\n      if (this.radioButton) {\n        this.$emit('button-click', newValue, this.getSelectedLabel(newValue));\n      }\n    }\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (!this.radioButton) {\n        this.$emit('button-click', {\n          value: button.value,\n          label: button.label\n        });\n      }\n    },\n    getSelectedLabel(value) {\n      const selectedButton = this.buttons.find(button => button.value === value);\n      return selectedButton ? selectedButton.label : '';\n    }\n  }\n};","map":{"version":3,"names":["props","buttons","Array","radioButton","Boolean","data","selectedValue","watch","newValue","$emit","getSelectedLabel","methods","handleButtonClick","button","value","label","selectedButton","find"],"sources":["/Users/stanley/Documents/Projecten/Archief/2023/mariendael-kunstquiz/kunstquiz/interactive-image-categorization/src/components/ButtonGroup.vue"],"sourcesContent":["<template>\n  <div class=\"button-group\">\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" @click=\"handleButtonClick(button)\">\n      <template v-if=\"radioButton\">\n        <input type=\"radio\" :value=\"button.value\" v-model=\"selectedValue\" />\n      </template>\n      {{ button.label }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    buttons: Array, // Array of button objects with label and value\n    radioButton: Boolean, // Flag to determine if radio button version should be used\n  },\n  data() {\n    return {\n      selectedValue: null,\n    };\n  },\n  watch: {\n    selectedValue(newValue) {\n      if (this.radioButton) {\n        this.$emit('button-click', newValue, this.getSelectedLabel(newValue));\n      }\n    },\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (!this.radioButton) {\n        this.$emit('button-click', {value: button.value, label: button.label });\n      }\n    },\n    getSelectedLabel(value) {\n      const selectedButton = this.buttons.find(button => button.value === value);\n      return selectedButton ? selectedButton.label : '';\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your component-specific styling here */\n</style>\n"],"mappings":"AAYA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC,KAAK;IAAE;IAChBC,WAAW,EAAEC,OAAO,CAAE;EACxB,CAAC;;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLD,aAAaA,CAACE,QAAQ,EAAE;MACtB,IAAI,IAAI,CAACL,WAAW,EAAE;QACpB,IAAI,CAACM,KAAK,CAAC,cAAc,EAAED,QAAQ,EAAE,IAAI,CAACE,gBAAgB,CAACF,QAAQ,CAAC,CAAC;MACvE;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,iBAAiBA,CAACC,MAAM,EAAE;MACxB,IAAI,CAAC,IAAI,CAACV,WAAW,EAAE;QACrB,IAAI,CAACM,KAAK,CAAC,cAAc,EAAE;UAACK,KAAK,EAAED,MAAM,CAACC,KAAK;UAAEC,KAAK,EAAEF,MAAM,CAACE;QAAM,CAAC,CAAC;MACzE;IACF,CAAC;IACDL,gBAAgBA,CAACI,KAAK,EAAE;MACtB,MAAME,cAAa,GAAI,IAAI,CAACf,OAAO,CAACgB,IAAI,CAACJ,MAAK,IAAKA,MAAM,CAACC,KAAI,KAAMA,KAAK,CAAC;MAC1E,OAAOE,cAAa,GAAIA,cAAc,CAACD,KAAI,GAAI,EAAE;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
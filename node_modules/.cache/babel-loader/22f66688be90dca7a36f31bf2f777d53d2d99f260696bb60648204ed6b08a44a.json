{"ast":null,"code":"export default {\n  props: {\n    buttons: Array,\n    // Array of button objects with label and value\n    radioButton: Boolean // Flag to determine if radio button version should be used\n  },\n\n  data() {\n    return {\n      selectedValue: null\n    };\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (this.radioButton) {\n        // For radio buttons, selectedValue will be automatically updated by v-model\n        this.$emit('button-click', this.selectedValue);\n      } else {\n        // For normal buttons, set the selectedValue directly\n        this.selectedValue = button.value;\n        this.$emit('button-click', button.value);\n      }\n    },\n    isSelected(button) {\n      return this.radioButton ? this.selectedValue === button.value : false;\n    }\n  }\n};","map":{"version":3,"names":["props","buttons","Array","radioButton","Boolean","data","selectedValue","methods","handleButtonClick","button","$emit","value","isSelected"],"sources":["/Users/stanley/Sites/mariendael-kunstquiz/src/components/ButtonGroup.vue"],"sourcesContent":["<template>\n  <div class=\"button-group\">\n    <button\n      v-for=\"(button, index) in buttons\"\n      :key=\"index\"\n      @click=\"handleButtonClick(button)\"\n      :class=\"{ 'selected-radio-button': isSelected(button), 'normal-button': !radioButton }\"\n    >\n      <template v-if=\"radioButton\">\n        <input type=\"radio\" :value=\"button.value\" v-model=\"selectedValue\" />\n      </template>\n      {{ button.label }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    buttons: Array, // Array of button objects with label and value\n    radioButton: Boolean, // Flag to determine if radio button version should be used\n  },\n  data() {\n    return {\n      selectedValue: null,\n    };\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (this.radioButton) {\n        // For radio buttons, selectedValue will be automatically updated by v-model\n        this.$emit('button-click', this.selectedValue);\n      } else {\n        // For normal buttons, set the selectedValue directly\n        this.selectedValue = button.value;\n        this.$emit('button-click', button.value);\n      }\n    },\n    isSelected(button) {\n      return this.radioButton ? this.selectedValue === button.value : false;\n    },\n  },\n};\n</script>\n"],"mappings":"AAiBA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC,KAAK;IAAE;IAChBC,WAAW,EAAEC,OAAO,CAAE;EACxB,CAAC;;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,MAAM,EAAE;MACxB,IAAI,IAAI,CAACN,WAAW,EAAE;QACpB;QACA,IAAI,CAACO,KAAK,CAAC,cAAc,EAAE,IAAI,CAACJ,aAAa,CAAC;MAChD,OAAO;QACL;QACA,IAAI,CAACA,aAAY,GAAIG,MAAM,CAACE,KAAK;QACjC,IAAI,CAACD,KAAK,CAAC,cAAc,EAAED,MAAM,CAACE,KAAK,CAAC;MAC1C;IACF,CAAC;IACDC,UAAUA,CAACH,MAAM,EAAE;MACjB,OAAO,IAAI,CAACN,WAAU,GAAI,IAAI,CAACG,aAAY,KAAMG,MAAM,CAACE,KAAI,GAAI,KAAK;IACvE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
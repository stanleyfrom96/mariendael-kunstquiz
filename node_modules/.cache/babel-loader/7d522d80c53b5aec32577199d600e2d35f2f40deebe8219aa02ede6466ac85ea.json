{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen\n  },\n  data() {\n    return {\n      currentExercise: 1,\n      appData: {\n        images: imageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null\n        })),\n        firstOptions: [{\n          label: 'Category 1',\n          value: 'category-1'\n        }, {\n          label: 'Category 2',\n          value: 'category-2'\n        }, {\n          label: 'Category 3',\n          value: 'category-3'\n        }, {\n          label: 'Category 4',\n          value: 'category-4'\n        }, {\n          label: 'Category 5',\n          value: 'category-5'\n        }\n        // Define categories for Exercise 1 here\n        ],\n\n        firstSelectedOptions: [],\n        // Initialize with empty options\n        secondOptions: [{\n          label: 'Category A',\n          value: 'category-A'\n        }, {\n          label: 'Category B',\n          value: 'category-B'\n        }, {\n          label: 'Category C',\n          value: 'category-C'\n        }, {\n          label: 'Category D',\n          value: 'category-D'\n        }, {\n          label: 'Category E',\n          value: 'category-E'\n        }\n        // Define categories for Exercise 3 here\n        ],\n\n        secondSelectedOptions: [],\n        // Initialize with empty options\n        firstFavoriteCategory: '',\n        secondFavoriteCategory: '',\n        firstMotivation: '',\n        secondMotivation: '',\n        favoriteImage: ''\n      }\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen'\n      };\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      if (this.appData.firstFavoriteCategory) {\n        return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n      }\n      return [];\n    },\n    imagesForSecondCategory() {\n      if (this.appData.secondFavoriteCategory) {\n        return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n      }\n      return [];\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Exercise 1: Categorize Images';\n        case 2:\n          return 'Exercise 2: Choose Favorite Categories';\n        case 3:\n          return 'Exercise 3: Recategorize Images';\n        case 4:\n          return 'Exercise 4: Recategorize Images';\n        case 5:\n          return 'Exercise 5: Recategorize Images';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Result Summary';\n        default:\n          return 'Unknown Exercise';\n      }\n    }\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Find the corresponding option in firstOptions\n      const selectedOption = this.appData.firstOptions.find(option => option.value === category);\n\n      // Add the selected option to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.some(option => option.value === category)) {\n        this.appData.firstSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise2Complete({\n      firstFavoriteCategory,\n      firstMotivation\n    }) {\n      // Update the corresponding properties in the appData object\n      this.appData.firstFavoriteCategory = firstFavoriteCategory;\n      this.appData.firstMotivation = firstMotivation;\n      console.log(firstFavoriteCategory);\n      this.currentExercise++;\n    },\n    handleAssignSecondCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].secondCategory = category;\n\n      // Find the corresponding option in secondOptions\n      const selectedOption = this.appData.secondOptions.find(option => option.value === category);\n\n      // Add the selected option to secondSelectedOptions (without duplicates)\n      if (!this.appData.secondSelectedOptions.some(option => option.value === category)) {\n        this.appData.secondSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise4Complete({\n      secondFavoriteCategory,\n      secondMotivation\n    }) {\n      // Update the corresponding properties in the appData object\n      this.appData.secondFavoriteCategory = secondFavoriteCategory;\n      this.appData.secondMotivation = secondMotivation;\n      this.currentExercise++;\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    }\n  }\n};","map":{"version":3,"names":["ExerciseScreen1","ExerciseScreen2","ExerciseScreen3","ExerciseScreen4","ExerciseScreen5","ResultScreen","imageUrls","components","data","currentExercise","appData","images","map","url","firstCategory","secondCategory","firstOptions","label","value","firstSelectedOptions","secondOptions","secondSelectedOptions","firstFavoriteCategory","secondFavoriteCategory","firstMotivation","secondMotivation","favoriteImage","computed","currentExerciseComponent","componentMap","summary","imagesForFirstCategory","filter","image","imagesForSecondCategory","currentExerciseHeading","methods","handleAssignFirstCategory","category","imageIndex","selectedOption","find","option","some","push","handleExercise2Complete","console","log","handleAssignSecondCategory","handleExercise4Complete","handleExerciseComplete"],"sources":["/Users/stanley/Documents/Projecten/Archief/2023/mariendael-kunstquiz/kunstquiz/interactive-image-categorization/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h1>{{ currentExerciseHeading }}</h1>\n\n    <component\n      :is=\"currentExerciseComponent\"\n      :appData=\"appData\"\n      :images=\"appData.images\"\n      :firstOptions=\"appData.firstOptions\"\n      :firstSelectedOptions=\"appData.firstSelectedOptions\"\n      :secondOptions=\"appData.secondOptions\"\n      :secondSelectedOptions=\"appData.secondSelectedOptions\"\n      :imagesForFirstCategory=\"imagesForFirstCategory\"\n      :imagesForSecondCategory=\"imagesForSecondCategory\"\n      @assign-first-category=\"handleAssignFirstCategory\"\n      @exercise-2-complete=\"handleExercise2Complete\"\n      @assign-second-category=\"handleAssignSecondCategory\"\n      @exercise-4-complete=\"handleExercise4Complete\"\n      @exercise-complete=\"handleExerciseComplete\"\n    />\n  </div>\n</template>\n\n<script>\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\n\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen,\n  },\n  data() {\n    return {\n      currentExercise: 1,\n      appData: {\n        images: imageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null,\n        })),\n        firstOptions: [\n          { label: 'Category 1', value: 'category-1' },\n          { label: 'Category 2', value: 'category-2' },\n          { label: 'Category 3', value: 'category-3' },\n          { label: 'Category 4', value: 'category-4' },\n          { label: 'Category 5', value: 'category-5' },\n          // Define categories for Exercise 1 here\n        ],\n        firstSelectedOptions: [], // Initialize with empty options\n        secondOptions: [\n          { label: 'Category A', value: 'category-A' },\n          { label: 'Category B', value: 'category-B' },\n          { label: 'Category C', value: 'category-C' },\n          { label: 'Category D', value: 'category-D' },\n          { label: 'Category E', value: 'category-E' },\n          // Define categories for Exercise 3 here\n        ],\n        secondSelectedOptions: [], // Initialize with empty options\n        firstFavoriteCategory: '',\n        secondFavoriteCategory: '',\n        firstMotivation: '',\n        secondMotivation: '',\n        favoriteImage: '',\n      },\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen',\n      };\n\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      if (this.appData.firstFavoriteCategory) {\n        return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n      }\n      return [];\n    },\n    imagesForSecondCategory() {\n      if (this.appData.secondFavoriteCategory) {\n        return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n      }\n      return [];\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Exercise 1: Categorize Images';\n        case 2:\n          return 'Exercise 2: Choose Favorite Categories';\n        case 3:\n          return 'Exercise 3: Recategorize Images';\n        case 4:\n          return 'Exercise 4: Recategorize Images';\n        case 5:\n          return 'Exercise 5: Recategorize Images';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Result Summary';\n        default:\n          return 'Unknown Exercise';\n      }\n    },\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Find the corresponding option in firstOptions\n      const selectedOption = this.appData.firstOptions.find(option => option.value === category);\n\n      // Add the selected option to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.some(option => option.value === category)) {\n        this.appData.firstSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise2Complete({ firstFavoriteCategory, firstMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.firstFavoriteCategory = firstFavoriteCategory;\n      this.appData.firstMotivation = firstMotivation;\n      console.log(firstFavoriteCategory)\n      this.currentExercise++;\n    },\n    handleAssignSecondCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].secondCategory = category;\n\n      // Find the corresponding option in secondOptions\n      const selectedOption = this.appData.secondOptions.find(option => option.value === category);\n\n      // Add the selected option to secondSelectedOptions (without duplicates)\n      if (!this.appData.secondSelectedOptions.some(option => option.value === category)) {\n        this.appData.secondSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise4Complete({ secondFavoriteCategory, secondMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.secondFavoriteCategory = secondFavoriteCategory;\n      this.appData.secondMotivation = secondMotivation;\n      this.currentExercise++;\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
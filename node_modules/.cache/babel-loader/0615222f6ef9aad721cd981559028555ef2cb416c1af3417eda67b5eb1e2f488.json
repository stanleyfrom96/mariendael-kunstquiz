{"ast":null,"code":"export default {\n  props: {\n    appData: Object // Passed from App.vue\n  },\n\n  computed: {\n    imageCounts() {\n      const counts = {};\n      this.appData.images.forEach(image => {\n        if (image.firstCategory) {\n          counts[image.firstCategory] = (counts[image.firstCategory] || 0) + 1;\n        }\n      });\n      return counts;\n    }\n  },\n  methods: {\n    copyResults() {\n      const results = `\n        Favorite Category from Exercise 2: ${this.appData.firstFavoriteCategory}\n        Reason: ${this.appData.firstMotivation}\n\n        Favorite Image from Exercise 5: ${this.appData.favoriteImage}\n        Reason: ${this.appData.imageMotivation}\n\n        Images Assigned to Each Category in Exercise 1:\n        ${Object.keys(this.imageCounts).map(category => `${category}: ${this.imageCounts[category]} images`).join('\\n')}\n      `;\n\n      // Perform the action to copy/send the results\n      // This could be done using the Clipboard API or sending an email, for example\n      // For simplicity, let's just log the results to the console here\n      console.log(results);\n    }\n  }\n};","map":{"version":3,"names":["props","appData","Object","computed","imageCounts","counts","images","forEach","image","firstCategory","methods","copyResults","results","firstFavoriteCategory","firstMotivation","favoriteImage","imageMotivation","keys","map","category","join","console","log"],"sources":["/Users/stanley/Documents/Projecten/Archief/2023/mariendael-kunstquiz/kunstquiz/interactive-image-categorization/src/components/ResultScreen.vue"],"sourcesContent":["<template>\n  <div class=\"result-screen\">\n    <h2>Result Summary</h2>\n\n    <div class=\"result-item\">\n      <h3>Your Favorite Category from Exercise 2:</h3>\n      <p>{{ appData.firstFavoriteCategory }}</p>\n      <p><strong>Reason:</strong> {{ appData.firstMotivation }}</p>\n    </div>\n\n    <div class=\"result-item\">\n      <h3>Your Favorite Image from Exercise 5:</h3>\n      <img :src=\"appData.favoriteImage\" :alt=\"appData.favoriteImage\" />\n      <p><strong>Reason:</strong> {{ appData.imageMotivation }}</p>\n    </div>\n\n    <div class=\"result-item\">\n      <h3>Images Assigned to Each Category in Exercise 1:</h3>\n      <ul>\n        <li v-for=\"(count, category) in imageCounts\" :key=\"category\">\n          {{ category }}: {{ count }} images\n        </li>\n      </ul>\n    </div>\n\n    <button @click=\"copyResults\">Copy Results</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    appData: Object, // Passed from App.vue\n  },\n  computed: {\n    imageCounts() {\n      const counts = {};\n      this.appData.images.forEach(image => {\n        if (image.firstCategory) {\n          counts[image.firstCategory] = (counts[image.firstCategory] || 0) + 1;\n        }\n      });\n      return counts;\n    },\n  },\n  methods: {\n    copyResults() {\n      const results = `\n        Favorite Category from Exercise 2: ${this.appData.firstFavoriteCategory}\n        Reason: ${this.appData.firstMotivation}\n\n        Favorite Image from Exercise 5: ${this.appData.favoriteImage}\n        Reason: ${this.appData.imageMotivation}\n\n        Images Assigned to Each Category in Exercise 1:\n        ${Object.keys(this.imageCounts)\n          .map(category => `${category}: ${this.imageCounts[category]} images`)\n          .join('\\n')}\n      `;\n\n      // Perform the action to copy/send the results\n      // This could be done using the Clipboard API or sending an email, for example\n      // For simplicity, let's just log the results to the console here\n      console.log(results);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your component-specific styling here */\n.result-screen {\n  text-align: center;\n  padding: 20px;\n}\n\n.result-item {\n  margin-bottom: 20px;\n}\n\nimg {\n  max-width: 300px;\n}\n</style>\n"],"mappings":"AA8BA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC,MAAM,CAAE;EACnB,CAAC;;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,MAAMC,MAAK,GAAI,CAAC,CAAC;MACjB,IAAI,CAACJ,OAAO,CAACK,MAAM,CAACC,OAAO,CAACC,KAAI,IAAK;QACnC,IAAIA,KAAK,CAACC,aAAa,EAAE;UACvBJ,MAAM,CAACG,KAAK,CAACC,aAAa,IAAI,CAACJ,MAAM,CAACG,KAAK,CAACC,aAAa,KAAK,CAAC,IAAI,CAAC;QACtE;MACF,CAAC,CAAC;MACF,OAAOJ,MAAM;IACf;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,MAAMC,OAAM,GAAI;6CACuB,IAAI,CAACX,OAAO,CAACY,qBAAqB;kBAC7D,IAAI,CAACZ,OAAO,CAACa,eAAe;;0CAEJ,IAAI,CAACb,OAAO,CAACc,aAAa;kBAClD,IAAI,CAACd,OAAO,CAACe,eAAe;;;UAGpCd,MAAM,CAACe,IAAI,CAAC,IAAI,CAACb,WAAW,EAC3Bc,GAAG,CAACC,QAAO,IAAM,GAAEA,QAAS,KAAI,IAAI,CAACf,WAAW,CAACe,QAAQ,CAAC,SAAS,EACnEC,IAAI,CAAC,IAAI,CAAC;OACd;;MAED;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
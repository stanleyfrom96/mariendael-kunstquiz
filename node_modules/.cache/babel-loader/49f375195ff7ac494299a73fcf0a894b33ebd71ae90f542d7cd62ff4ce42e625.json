{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Mariendael Kunstquiz\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"exercise-heading\"\n};\nconst _hoisted_5 = {\n  class: \"exercise-description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, \"Opdracht \" + _toDisplayString($data.currentExercise), 1 /* TEXT */), _createElementVNode(\"h2\", _hoisted_5, _toDisplayString($options.currentExerciseHeading), 1 /* TEXT */), (_openBlock(), _createBlock(_resolveDynamicComponent($options.currentExerciseComponent), {\n    appData: $data.appData,\n    images: $data.appData.images,\n    firstOptions: $data.appData.firstOptions,\n    firstSelectedOptions: $data.appData.firstSelectedOptions,\n    secondOptions: $data.appData.secondOptions,\n    secondSelectedOptions: $data.appData.secondSelectedOptions,\n    imagesForFirstCategory: $options.imagesForFirstCategory,\n    imagesForSecondCategory: $options.imagesForSecondCategory,\n    onExerciseComplete: $options.handleExerciseComplete,\n    onAssignFirstCategory: $options.handleAssignFirstCategory,\n    onExercise2Complete: $options.handleExercise2Complete,\n    onAssignSecondCategory: $options.handleAssignSecondCategory,\n    onExercise4Complete: $options.handleExercise4Complete,\n    onExercise5Complete: $options.handleExercise5Complete\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, [\"appData\", \"images\", \"firstOptions\", \"firstSelectedOptions\", \"secondOptions\", \"secondSelectedOptions\", \"imagesForFirstCategory\", \"imagesForSecondCategory\", \"onExerciseComplete\", \"onAssignFirstCategory\", \"onExercise2Complete\", \"onAssignSecondCategory\", \"onExercise4Complete\", \"onExercise5Complete\"]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","currentExercise","_hoisted_5","$options","currentExerciseHeading","_createBlock","_resolveDynamicComponent","currentExerciseComponent","appData","images","firstOptions","firstSelectedOptions","secondOptions","secondSelectedOptions","imagesForFirstCategory","imagesForSecondCategory","onExerciseComplete","handleExerciseComplete","onAssignFirstCategory","handleAssignFirstCategory","onExercise2Complete","handleExercise2Complete","onAssignSecondCategory","handleAssignSecondCategory","onExercise4Complete","handleExercise4Complete","onExercise5Complete","handleExercise5Complete"],"sources":["/Users/stanley/Sites/mariendael-kunstquiz/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h1>Mariendael Kunstquiz</h1>\n    <div class=\"container\">\n\n      <h2 class=\"exercise-heading\">Opdracht {{ currentExercise }}</h2>\n      <h2 class=\"exercise-description\">{{ currentExerciseHeading }}</h2>\n      \n      <component\n      :is=\"currentExerciseComponent\"\n      :appData=\"appData\"\n      :images=\"appData.images\"\n      :firstOptions=\"appData.firstOptions\"\n      :firstSelectedOptions=\"appData.firstSelectedOptions\"\n      :secondOptions=\"appData.secondOptions\"\n      :secondSelectedOptions=\"appData.secondSelectedOptions\"\n      :imagesForFirstCategory=\"imagesForFirstCategory\"\n      :imagesForSecondCategory=\"imagesForSecondCategory\"\n      @exercise-complete=\"handleExerciseComplete\"\n      @assign-first-category=\"handleAssignFirstCategory\"\n      @exercise-2-complete=\"handleExercise2Complete\"\n      @assign-second-category=\"handleAssignSecondCategory\"\n      @exercise-4-complete=\"handleExercise4Complete\"\n      @exercise-5-complete=\"handleExercise5Complete\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\nimport options from './assets/options.json'; // Import the JSON file\n\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen,\n  },\n  data() {\n    const shuffledImageUrls = imageUrls.slice().sort(() => Math.random() - 0.5);\n    \n    return {\n      currentExercise: 1,\n      appData: {\n        images: shuffledImageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null,\n        })),\n        firstOptions: options.firstOptions,\n        firstSelectedOptions: [], // Initialize with empty options\n        firstFavoriteCategory: '',\n        firstMotivation: '',\n        firstImageSelection: [],\n        secondOptions: options.secondOptions,\n        secondSelectedOptions: [], // Initialize with empty options\n        secondFavoriteCategory: '',\n        secondMotivation: '',\n        secondImageSelection: [],\n        favoriteImage: '',\n        imageMotivation: '',\n      },\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen',\n      };\n\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      if (this.appData.firstFavoriteCategory) {\n        return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n      }\n      return [];\n    },\n    imagesForSecondCategory() {\n      if (this.appData.secondFavoriteCategory) {\n        return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n      }\n      return [];\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Categoriseer de afbeeldingen';\n        case 2:\n          return 'Selecteer een categorie om dieper op in te gaan';\n        case 3:\n          return 'Sorteer de afbeeldingen onder de volgende categorieÃ«n';\n        case 4:\n          return 'Kies hieruit de categorie die je het meest aanspreekt';\n        case 5:\n          return 'Kies de afbeelding die het meest met je doet';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Het Resultaat';\n        default:\n          return 'Onbekende Opdracht';\n      }\n    },\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Find the corresponding option in firstOptions\n      const selectedOption = this.appData.firstOptions.find(option => option.value === category);\n\n      // Add the selected option to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.some(option => option.value === category)) {\n        this.appData.firstSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise2Complete({ firstFavoriteCategory, firstMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.firstFavoriteCategory = firstFavoriteCategory; // Example: \"Category 2\"\n      this.appData.firstMotivation = firstMotivation;\n      \n      // Update firstImageSelection based on firstFavoriteCategory\n      this.appData.firstImageSelection = this.appData.images.filter(image => image.firstCategory === firstFavoriteCategory.value);\n\n      this.currentExercise++;\n    },\n\n    handleAssignSecondCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].secondCategory = category;\n\n      // Find the corresponding option in secondOptions\n      const selectedOption = this.appData.secondOptions.find(option => option.value === category);\n\n      // Add the selected option to secondSelectedOptions (without duplicates)\n      if (!this.appData.secondSelectedOptions.some(option => option.value === category)) {\n        this.appData.secondSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise4Complete({ secondFavoriteCategory, secondMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.secondFavoriteCategory = secondFavoriteCategory; // Example: \"Category B\"\n      this.appData.secondMotivation = secondMotivation;\n\n      // Update secondImageSelection based on secondFavoriteCategory\n      this.appData.secondImageSelection = this.appData.images.filter(image => image.secondCategory === secondFavoriteCategory.value);\n\n      this.currentExercise++;\n    },\n\n    handleExercise5Complete({ favoriteImage, imageMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.favoriteImage = favoriteImage;\n      this.appData.imageMotivation = imageMotivation;\n\n      // Advance to the result summary screen\n      this.currentExercise = 'summary';\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    },\n  },\n};\n</script>\n\n<style>\n\nbody {\n  margin: 0;\n}\n\n\nhtml {\n  background-color: #eeefe8;\n  text-align: center;\n}\n\n\n.app {\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  font-family: Verdana;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n\n.container {\n    background: white;\n    padding: 2rem;\n    border-radius: 2rem;\n    flex-direction: column;\n    display: flex;\n    height: 100%;\n    box-shadow: 0px 8px 20px 4px #16140e1a;\n}\n\n.exercise-heading {\n  text-align: center;\n  text-transform: uppercase;\n  color: #e0007f;\n}\n\n.exercise-description {\n  text-align: center;\n  margin-top: 0;\n  color: #B0A073;\n  margin-bottom: 20px;\n}\n\n.exercise {\n    display: flex;\n    width: 100%;\n    flex-grow: 1;\n    flex-direction: column;\n    gap: 3rem;\n    align-items: stretch;\n    justify-content: space-between;\n}\n\n.exercise {\n  align-self: center;\n}\n\nimg {\n  height: 40%;\n  max-height: 400px;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.image-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n}\n\n.image-grid img {\n  height: 100%;\n}\n\n.image-item.selected {\n    border: 3px solid #e0027f;\n}\n\n.button-group {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1rem;\n    flex-wrap: wrap;\n}\n\n@media (max-width: 780px) {\n  .button-group {\n    grid-template-columns: repeat(2, 1fr);\n}\n}\n\n\nbutton {\n  flex-grow: 1;\n  border-radius: 1rem;\n  border: none;\n  background-color: #e0007f;\n  color: white;\n  padding-inline: 1.5rem;\n  height: 3rem;\n  max-height: 3rem;\n  min-width: 10rem;\n  cursor: pointer;\n  font-size: 1rem;\n}\n\nbutton:hover {\n  filter: brightness(1.1);\n}\n\ntextarea {\n  flex-grow: 1;\n  padding: 1rem;\n  border-radius: 1rem;\n}\n\n.exercise button:active, .radio-button:focus {\n  background-color: grey;\n}\n\n.progress-bar {\n  text-align: center;\n  margin: 0;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAA6B,YAAzB,sBAAoB;;EACnBD,KAAK,EAAC;AAAW;;EAEhBA,KAAK,EAAC;AAAkB;;EACxBA,KAAK,EAAC;AAAsB;;uBALpCE,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,UAA6B,EAC7BH,mBAAA,CAsBM,OAtBNI,UAsBM,GApBJJ,mBAAA,CAAgE,MAAhEK,UAAgE,EAAnC,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,eAAe,kBACxDR,mBAAA,CAAkE,MAAlES,UAAkE,EAAAH,gBAAA,CAA9BI,QAAA,CAAAC,sBAAsB,mB,cAE1DC,YAAA,CAgBEC,wBAAA,CAfGH,QAAA,CAAAI,wBAAwB;IAC5BC,OAAO,EAAER,KAAA,CAAAQ,OAAO;IAChBC,MAAM,EAAET,KAAA,CAAAQ,OAAO,CAACC,MAAM;IACtBC,YAAY,EAAEV,KAAA,CAAAQ,OAAO,CAACE,YAAY;IAClCC,oBAAoB,EAAEX,KAAA,CAAAQ,OAAO,CAACG,oBAAoB;IAClDC,aAAa,EAAEZ,KAAA,CAAAQ,OAAO,CAACI,aAAa;IACpCC,qBAAqB,EAAEb,KAAA,CAAAQ,OAAO,CAACK,qBAAqB;IACpDC,sBAAsB,EAAEX,QAAA,CAAAW,sBAAsB;IAC9CC,uBAAuB,EAAEZ,QAAA,CAAAY,uBAAuB;IAChDC,kBAAiB,EAAEb,QAAA,CAAAc,sBAAsB;IACzCC,qBAAqB,EAAEf,QAAA,CAAAgB,yBAAyB;IAChDC,mBAAmB,EAAEjB,QAAA,CAAAkB,uBAAuB;IAC5CC,sBAAsB,EAAEnB,QAAA,CAAAoB,0BAA0B;IAClDC,mBAAmB,EAAErB,QAAA,CAAAsB,uBAAuB;IAC5CC,mBAAmB,EAAEvB,QAAA,CAAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
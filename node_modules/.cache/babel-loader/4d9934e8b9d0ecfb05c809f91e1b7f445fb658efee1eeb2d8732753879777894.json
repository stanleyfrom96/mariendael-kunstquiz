{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6985bace\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"result-screen\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Result Summary\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"result-item\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Favorite Category from Exercise 2:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Category:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Reason:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"result-item\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Your Favorite Image from Exercise 5:\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"src\", \"alt\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Reason:\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"result-item\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Images Assigned to Each Category in Exercise 1:\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($props.appData.firstFavoriteCategory.label), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_6, _createTextVNode(\" \" + _toDisplayString($props.appData.firstMotivation), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"img\", {\n    src: $props.appData.favoriteImage,\n    alt: $props.appData.favoriteImage\n  }, null, 8 /* PROPS */, _hoisted_9), _createElementVNode(\"p\", null, [_hoisted_10, _createTextVNode(\" \" + _toDisplayString($props.appData.imageMotivation), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedImageCounts, ({\n    categoryLabel,\n    count\n  }) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: categoryLabel\n    }, _toDisplayString(categoryLabel) + \": \" + _toDisplayString(count) + \" images \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.copyResults && $options.copyResults(...args))\n  }, \"Copy Results\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$props","appData","firstFavoriteCategory","label","_hoisted_6","firstMotivation","_hoisted_7","_hoisted_8","src","favoriteImage","alt","_hoisted_10","imageMotivation","_hoisted_11","_hoisted_12","_Fragment","_renderList","$options","sortedImageCounts","categoryLabel","count","key","onClick","_cache","args","copyResults"],"sources":["/Users/stanley/Documents/Projecten/Archief/2023/mariendael-kunstquiz/kunstquiz/interactive-image-categorization/src/components/ResultScreen.vue"],"sourcesContent":["<template>\n  <div class=\"result-screen\">\n    <h2>Result Summary</h2>\n\n    <div class=\"result-item\">\n        <h3>Favorite Category from Exercise 2:</h3>\n        <p><strong>Category:</strong> {{ appData.firstFavoriteCategory.label }}</p>\n        <p><strong>Reason:</strong> {{ appData.firstMotivation }}</p>\n    </div>\n\n    <div class=\"result-item\">\n      <h3>Your Favorite Image from Exercise 5:</h3>\n      <img :src=\"appData.favoriteImage\" :alt=\"appData.favoriteImage\" />\n      <p><strong>Reason:</strong> {{ appData.imageMotivation }}</p>\n    </div>\n\n    <div class=\"result-item\">\n        <h3>Images Assigned to Each Category in Exercise 1:</h3>\n        <ul>\n            <li v-for=\"({ categoryLabel, count }) in sortedImageCounts\" :key=\"categoryLabel\">\n            {{ categoryLabel }}: {{ count }} images\n            </li>\n        </ul>\n    </div>\n\n\n\n    <button @click=\"copyResults\">Copy Results</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    appData: Object, // Passed from App.vue\n  },\n  computed: {\n  sortedImageCounts() {\n    const counts = {};\n    this.appData.images.forEach(image => {\n      if (image.firstCategory) {\n        counts[image.firstCategory] = (counts[image.firstCategory] || 0) + 1;\n      }\n    });\n\n    // Sort the image counts from most images to least and map to include category labels\n    const sortedCounts = Object.entries(counts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([category, count]) => ({\n        categoryLabel: this.appData.firstOptions.find(option => option.value === category).label,\n        count,\n      }));\n\n    return sortedCounts;\n  },\n},\n\n  methods: {\n    copyResults() {\n        const results = `\n            Favorite Category from Exercise 2: ${this.firstFavoriteCategoryLabel}\n            Reason: ${this.appData.firstMotivation}\n\n            Favorite Image from Exercise 5: ${this.appData.favoriteImage}\n            Reason: ${this.appData.imageMotivation}\n\n            Images Assigned to Each Category in Exercise 1:\n            ${this.sortedImageCounts\n            .map(({ categoryLabel, count }) => `${categoryLabel}: ${count} images`)\n            .join('\\n')}\n        `;\n\n        // Perform the action to copy/send the results\n        // This could be done using the Clipboard API or sending an email, for example\n        // For simplicity, let's just log the results to the console here\n        console.log(results);\n    },\n\n  },\n};\n</script>\n\n<style scoped>\n/* Add your component-specific styling here */\n.result-screen {\n  text-align: center;\n  padding: 20px;\n}\n\n.result-item {\n  margin-bottom: 20px;\n}\n\nimg {\n  max-width: 300px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;gEACxBC,mBAAA,CAAuB,YAAnB,gBAAc;;EAEbD,KAAK,EAAC;AAAa;gEACpBC,mBAAA,CAA2C,YAAvC,oCAAkC;gEACnCA,mBAAA,CAA0B,gBAAlB,WAAS;gEACjBA,mBAAA,CAAwB,gBAAhB,SAAO;;EAGjBD,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAA6C,YAAzC,sCAAoC;;iEAErCA,mBAAA,CAAwB,gBAAhB,SAAO;;EAGfD,KAAK,EAAC;AAAa;iEACpBC,mBAAA,CAAwD,YAApD,iDAA+C;;;uBAhBzDC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,UAAuB,EAEvBH,mBAAA,CAIM,OAJNI,UAIM,GAHFC,UAA2C,EAC3CL,mBAAA,CAA2E,YAAxEM,UAA0B,E,iBAAA,GAAC,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,OAAO,CAACC,qBAAqB,CAACC,KAAK,iB,GACpEX,mBAAA,CAA6D,YAA1DY,UAAwB,E,iBAAA,GAAC,GAAAL,gBAAA,CAAGC,MAAA,CAAAC,OAAO,CAACI,eAAe,iB,KAG1Db,mBAAA,CAIM,OAJNc,UAIM,GAHJC,UAA6C,EAC7Cf,mBAAA,CAAiE;IAA3DgB,GAAG,EAAER,MAAA,CAAAC,OAAO,CAACQ,aAAa;IAAGC,GAAG,EAAEV,MAAA,CAAAC,OAAO,CAACQ;uCAChDjB,mBAAA,CAA6D,YAA1DmB,WAAwB,E,iBAAA,GAAC,GAAAZ,gBAAA,CAAGC,MAAA,CAAAC,OAAO,CAACW,eAAe,iB,KAGxDpB,mBAAA,CAOM,OAPNqB,WAOM,GANFC,WAAwD,EACxDtB,mBAAA,CAIK,c,kBAHDC,mBAAA,CAEKsB,SAAA,QAAAC,WAAA,CAFoCC,QAAA,CAAAC,iBAAiB;IAA5CC,aAAa;IAAEC;EAAK;yBAAlC3B,mBAAA,CAEK;MAFwD4B,GAAG,EAAEF;IAAa,GAAApB,gBAAA,CAC5EoB,aAAa,IAAG,IAAE,GAAApB,gBAAA,CAAGqB,KAAK,IAAG,UAChC;sCAMR5B,mBAAA,CAAkD;IAAzC8B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,QAAA,CAAAQ,WAAA,IAAAR,QAAA,CAAAQ,WAAA,IAAAD,IAAA,CAAW;KAAE,cAAY,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}
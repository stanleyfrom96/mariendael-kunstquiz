{"ast":null,"code":"export default {\n  props: {\n    buttons: Array,\n    // Array of button objects with label and value\n    radioButton: Boolean // Flag to determine if radio button version should be used\n  },\n\n  data() {\n    return {\n      selectedValue: null\n    };\n  },\n  watch: {\n    selectedValue(newValue) {\n      if (this.radioButton) {\n        this.$emit('button-click', newValue);\n      }\n    }\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (!this.radioButton) {\n        this.selectedValue = button.value; // Set the selectedValue to the button's value\n        this.$emit('button-click', button.value); // Emit the selected value\n      }\n    },\n\n    isSelected(button) {\n      return this.selectedValue === button.value;\n    }\n  }\n};","map":{"version":3,"names":["props","buttons","Array","radioButton","Boolean","data","selectedValue","watch","newValue","$emit","methods","handleButtonClick","button","value","isSelected"],"sources":["/Users/stanley/Sites/mariendael-kunstquiz/src/components/ButtonGroup.vue"],"sourcesContent":["<template>\n  <div class=\"button-group\">\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" @click=\"handleButtonClick(button)\" :class=\"{ 'radio-button': radioButton, 'normal-button': !radioButton }\">\n      <template v-if=\"radioButton\">\n        <input type=\"radio\" :value=\"button.value\" v-model=\"selectedValue\" />\n      </template>\n      {{ button.label }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    buttons: Array, // Array of button objects with label and value\n    radioButton: Boolean, // Flag to determine if radio button version should be used\n  },\n  data() {\n    return {\n      selectedValue: null,\n    };\n  },\n  watch: {\n    selectedValue(newValue) {\n      if (this.radioButton) {\n        this.$emit('button-click', newValue);\n      }\n    },\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (!this.radioButton) {\n        this.selectedValue = button.value; // Set the selectedValue to the button's value\n        this.$emit('button-click', button.value); // Emit the selected value\n      }\n    },\n    isSelected(button) {\n      return this.selectedValue === button.value;\n    },\n  },\n};\n</script>\n"],"mappings":"AAYA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC,KAAK;IAAE;IAChBC,WAAW,EAAEC,OAAO,CAAE;EACxB,CAAC;;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLD,aAAaA,CAACE,QAAQ,EAAE;MACtB,IAAI,IAAI,CAACL,WAAW,EAAE;QACpB,IAAI,CAACM,KAAK,CAAC,cAAc,EAAED,QAAQ,CAAC;MACtC;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,iBAAiBA,CAACC,MAAM,EAAE;MACxB,IAAI,CAAC,IAAI,CAACT,WAAW,EAAE;QACrB,IAAI,CAACG,aAAY,GAAIM,MAAM,CAACC,KAAK,EAAE;QACnC,IAAI,CAACJ,KAAK,CAAC,cAAc,EAAEG,MAAM,CAACC,KAAK,CAAC,EAAE;MAC5C;IACF,CAAC;;IACDC,UAAUA,CAACF,MAAM,EAAE;MACjB,OAAO,IAAI,CAACN,aAAY,KAAMM,MAAM,CAACC,KAAK;IAC5C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
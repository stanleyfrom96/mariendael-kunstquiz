{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"button-group\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.buttons, (button, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      onClick: $event => $options.handleButtonClick(button),\n      class: _normalizeClass({\n        'radio-button': $props.radioButton,\n        'normal-button': !$props.radioButton\n      })\n    }, [$props.radioButton ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      type: \"radio\",\n      value: button.value,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedValue = $event)\n    }, null, 8 /* PROPS */, _hoisted_3)), [[_vModelRadio, $data.selectedValue]]) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString(button.label), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","buttons","button","index","key","onClick","$event","$options","handleButtonClick","_normalizeClass","radioButton","type","value","$data","selectedValue","_toDisplayString","label"],"sources":["/Users/stanley/Sites/mariendael-kunstquiz/src/components/ButtonGroup.vue"],"sourcesContent":["<template>\n  <div class=\"button-group\">\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" @click=\"handleButtonClick(button)\" :class=\"{ 'radio-button': radioButton, 'normal-button': !radioButton }\">\n      <template v-if=\"radioButton\">\n        <input type=\"radio\" :value=\"button.value\" v-model=\"selectedValue\" />\n      </template>\n      {{ button.label }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    buttons: Array, // Array of button objects with label and value\n    radioButton: Boolean, // Flag to determine if radio button version should be used\n  },\n  data() {\n    return {\n      selectedValue: null,\n    };\n  },\n  watch: {\n    selectedValue(newValue) {\n      if (this.radioButton) {\n        this.$emit('button-click', newValue);\n      }\n    },\n  },\n  methods: {\n    handleButtonClick(button) {\n      if (!this.radioButton) {\n        this.selectedValue = button.value; // Set the selectedValue to the button's value\n        this.$emit('button-click', button.value); // Emit the selected value\n      }\n    },\n    isSelected(button) {\n      return this.selectedValue === button.value;\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;;;uBAAzBC,mBAAA,CAOM,OAPNC,UAOM,I,kBANJD,mBAAA,CAKSE,SAAA,QAAAC,WAAA,CALyBC,MAAA,CAAAC,OAAO,GAAzBC,MAAM,EAAEC,KAAK;yBAA7BP,mBAAA,CAKS;MALmCQ,GAAG,EAAED,KAAK;MAAGE,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,iBAAiB,CAACN,MAAM;MAAIP,KAAK,EAAAc,eAAA;QAAA,gBAAoBT,MAAA,CAAAU,WAAW;QAAA,kBAAoBV,MAAA,CAAAU;MAAW;QAC7IV,MAAA,CAAAU,WAAW,G,+BACzBd,mBAAA,CAAoE;;MAA7De,IAAI,EAAC,OAAO;MAAEC,KAAK,EAAEV,MAAM,CAACU,KAAK;iEAAWC,KAAA,CAAAC,aAAa,GAAAR,MAAA;0DAAbO,KAAA,CAAAC,aAAa,E,wDACvD,GACX,GAAAC,gBAAA,CAAGb,MAAM,CAACc,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\nimport options from './assets/options.json'; // Import the JSON file\n\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen\n  },\n  data() {\n    const shuffledImageUrls = imageUrls.slice().sort(() => Math.random() - 0.5);\n    return {\n      currentExercise: 1,\n      appData: {\n        images: shuffledImageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null\n        })),\n        firstOptions: options.firstOptions,\n        firstSelectedOptions: [],\n        // Initialize with empty options\n        firstFavoriteCategory: '',\n        firstMotivation: '',\n        firstImageSelection: [],\n        secondOptions: options.secondOptions,\n        secondSelectedOptions: [],\n        // Initialize with empty options\n        secondFavoriteCategory: '',\n        secondMotivation: '',\n        secondImageSelection: [],\n        favoriteImage: '',\n        imageMotivation: ''\n      }\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen'\n      };\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      if (this.appData.firstFavoriteCategory) {\n        return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n      }\n      return [];\n    },\n    imagesForSecondCategory() {\n      if (this.appData.secondFavoriteCategory) {\n        return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n      }\n      return [];\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Categoriseer de afbeeldingen';\n        case 2:\n          return 'Selecteer een categorie om dieper op in te gaan';\n        case 3:\n          return 'Sorteer de afbeeldingen onder de volgende categorieÃ«n';\n        case 4:\n          return 'Kies hieruit de categorie die je het meest aanspreekt';\n        case 5:\n          return 'Kies de afbeelding die het meest met je doet';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Het Resultaat';\n        default:\n          return 'Onbekende Opdracht';\n      }\n    }\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Find the corresponding option in firstOptions\n      const selectedOption = this.appData.firstOptions.find(option => option.value === category);\n\n      // Add the selected option to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.some(option => option.value === category)) {\n        this.appData.firstSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise2Complete({\n      firstFavoriteCategory,\n      firstMotivation\n    }) {\n      // Update the corresponding properties in the appData object\n      this.appData.firstFavoriteCategory = firstFavoriteCategory; // Example: \"Category 2\"\n      this.appData.firstMotivation = firstMotivation;\n\n      // Update firstImageSelection based on firstFavoriteCategory\n      this.appData.firstImageSelection = this.appData.images.filter(image => image.firstCategory === firstFavoriteCategory.value);\n      this.currentExercise++;\n    },\n    handleAssignSecondCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].secondCategory = category;\n\n      // Find the corresponding option in secondOptions\n      const selectedOption = this.appData.secondOptions.find(option => option.value === category);\n\n      // Add the selected option to secondSelectedOptions (without duplicates)\n      if (!this.appData.secondSelectedOptions.some(option => option.value === category)) {\n        this.appData.secondSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise4Complete({\n      secondFavoriteCategory,\n      secondMotivation\n    }) {\n      // Update the corresponding properties in the appData object\n      this.appData.secondFavoriteCategory = secondFavoriteCategory; // Example: \"Category B\"\n      this.appData.secondMotivation = secondMotivation;\n\n      // Update secondImageSelection based on secondFavoriteCategory\n      this.appData.secondImageSelection = this.appData.images.filter(image => image.secondCategory === secondFavoriteCategory.value);\n      this.currentExercise++;\n    },\n    handleExercise5Complete({\n      favoriteImage,\n      imageMotivation\n    }) {\n      // Update the corresponding properties in the appData object\n      this.appData.favoriteImage = favoriteImage;\n      this.appData.imageMotivation = imageMotivation;\n\n      // Advance to the result summary screen\n      this.currentExercise = 'summary';\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    }\n  }\n};","map":{"version":3,"names":["ExerciseScreen1","ExerciseScreen2","ExerciseScreen3","ExerciseScreen4","ExerciseScreen5","ResultScreen","imageUrls","options","components","data","shuffledImageUrls","slice","sort","Math","random","currentExercise","appData","images","map","url","firstCategory","secondCategory","firstOptions","firstSelectedOptions","firstFavoriteCategory","firstMotivation","firstImageSelection","secondOptions","secondSelectedOptions","secondFavoriteCategory","secondMotivation","secondImageSelection","favoriteImage","imageMotivation","computed","currentExerciseComponent","componentMap","summary","imagesForFirstCategory","filter","image","imagesForSecondCategory","currentExerciseHeading","methods","handleAssignFirstCategory","category","imageIndex","selectedOption","find","option","value","some","push","handleExercise2Complete","handleAssignSecondCategory","handleExercise4Complete","handleExercise5Complete","handleExerciseComplete"],"sources":["/Users/stanley/Sites/mariendael-kunstquiz/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"container\">\n\n      <h1 class=\"exercise-heading\">Opdracht {{ currentExercise }}</h1>\n      <h2 class=\"exercise-description\">{{ currentExerciseHeading }}</h2>\n      \n      <component\n      :is=\"currentExerciseComponent\"\n      :appData=\"appData\"\n      :images=\"appData.images\"\n      :firstOptions=\"appData.firstOptions\"\n      :firstSelectedOptions=\"appData.firstSelectedOptions\"\n      :secondOptions=\"appData.secondOptions\"\n      :secondSelectedOptions=\"appData.secondSelectedOptions\"\n      :imagesForFirstCategory=\"imagesForFirstCategory\"\n      :imagesForSecondCategory=\"imagesForSecondCategory\"\n      @exercise-complete=\"handleExerciseComplete\"\n      @assign-first-category=\"handleAssignFirstCategory\"\n      @exercise-2-complete=\"handleExercise2Complete\"\n      @assign-second-category=\"handleAssignSecondCategory\"\n      @exercise-4-complete=\"handleExercise4Complete\"\n      @exercise-5-complete=\"handleExercise5Complete\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\nimport options from './assets/options.json'; // Import the JSON file\n\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen,\n  },\n  data() {\n    const shuffledImageUrls = imageUrls.slice().sort(() => Math.random() - 0.5);\n    \n    return {\n      currentExercise: 1,\n      appData: {\n        images: shuffledImageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null,\n        })),\n        firstOptions: options.firstOptions,\n        firstSelectedOptions: [], // Initialize with empty options\n        firstFavoriteCategory: '',\n        firstMotivation: '',\n        firstImageSelection: [],\n        secondOptions: options.secondOptions,\n        secondSelectedOptions: [], // Initialize with empty options\n        secondFavoriteCategory: '',\n        secondMotivation: '',\n        secondImageSelection: [],\n        favoriteImage: '',\n        imageMotivation: '',\n      },\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen',\n      };\n\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      if (this.appData.firstFavoriteCategory) {\n        return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n      }\n      return [];\n    },\n    imagesForSecondCategory() {\n      if (this.appData.secondFavoriteCategory) {\n        return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n      }\n      return [];\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Categoriseer de afbeeldingen';\n        case 2:\n          return 'Selecteer een categorie om dieper op in te gaan';\n        case 3:\n          return 'Sorteer de afbeeldingen onder de volgende categorieÃ«n';\n        case 4:\n          return 'Kies hieruit de categorie die je het meest aanspreekt';\n        case 5:\n          return 'Kies de afbeelding die het meest met je doet';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Het Resultaat';\n        default:\n          return 'Onbekende Opdracht';\n      }\n    },\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Find the corresponding option in firstOptions\n      const selectedOption = this.appData.firstOptions.find(option => option.value === category);\n\n      // Add the selected option to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.some(option => option.value === category)) {\n        this.appData.firstSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise2Complete({ firstFavoriteCategory, firstMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.firstFavoriteCategory = firstFavoriteCategory; // Example: \"Category 2\"\n      this.appData.firstMotivation = firstMotivation;\n      \n      // Update firstImageSelection based on firstFavoriteCategory\n      this.appData.firstImageSelection = this.appData.images.filter(image => image.firstCategory === firstFavoriteCategory.value);\n\n      this.currentExercise++;\n    },\n\n    handleAssignSecondCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].secondCategory = category;\n\n      // Find the corresponding option in secondOptions\n      const selectedOption = this.appData.secondOptions.find(option => option.value === category);\n\n      // Add the selected option to secondSelectedOptions (without duplicates)\n      if (!this.appData.secondSelectedOptions.some(option => option.value === category)) {\n        this.appData.secondSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise4Complete({ secondFavoriteCategory, secondMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.secondFavoriteCategory = secondFavoriteCategory; // Example: \"Category B\"\n      this.appData.secondMotivation = secondMotivation;\n\n      // Update secondImageSelection based on secondFavoriteCategory\n      this.appData.secondImageSelection = this.appData.images.filter(image => image.secondCategory === secondFavoriteCategory.value);\n\n      this.currentExercise++;\n    },\n\n    handleExercise5Complete({ favoriteImage, imageMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.favoriteImage = favoriteImage;\n      this.appData.imageMotivation = imageMotivation;\n\n      // Advance to the result summary screen\n      this.currentExercise = 'summary';\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    },\n  },\n};\n</script>\n\n<style>\n\nbody {\n  margin: 0;\n}\n\n\nhtml {\n  background-color: #eeefe8;\n}\n\n\n.app {\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  font-family: Verdana;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n\n.container {\n    background: white;\n    padding: 2rem;\n    border-radius: 2rem;\n    flex-direction: column;\n    display: flex;\n    height: 100%;\n    box-shadow: 0px 8px 20px 4px #16140e1a;\n}\n\n.exercise-heading {\n  text-align: center;\n  text-transform: uppercase;\n  color: #e0007f;\n}\n\n.exercise-description {\n  text-align: center;\n  margin-top: 0;\n  color: #B0A073;\n  margin-bottom: 20px;\n}\n\n.exercise {\n    display: flex;\n    width: 100%;\n    flex-grow: 1;\n    flex-direction: column;\n    gap: 3rem;\n    align-items: stretch;\n    justify-content: space-between;\n}\n\n.exercise {\n  align-self: center;\n}\n\nimg {\n  height: 40%;\n  max-height: 400px;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.button-group {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1rem;\n    flex-wrap: wrap;\n}\n\n@media (max-width: 780px) {\n  .button-group {\n    grid-template-columns: repeat(2, 1fr);\n}\n}\n\n\nbutton {\n  flex-grow: 1;\n  border-radius: 1rem;\n  border: none;\n  background-color: #e0007f;\n  color: white;\n  padding-inline: 1.5rem;\n  height: 3rem;\n  max-height: 3rem;\n  min-width: 10rem;\n  cursor: pointer;\n  font-size: 1rem;\n}\n\nbutton:hover {\n  filter: brightness(1.1);\n}\n\ntextarea {\n  flex-grow: 1;\n  padding: 1rem;\n  border-radius: 1rem;\n}\n\n.exercise button:active {\n  background-color: grey;\n}\n\n.progress-bar {\n  text-align: center;\n  margin: 0;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($options.currentExerciseHeading), 1 /* TEXT */), (_openBlock(), _createBlock(_resolveDynamicComponent($options.currentExerciseComponent), {\n    appData: $data.appData,\n    images: $data.appData.images,\n    firstOptions: $data.appData.firstOptions,\n    firstSelectedOptions: $data.appData.firstSelectedOptions,\n    secondOptions: $data.appData.secondOptions,\n    secondSelectedOptions: $data.appData.secondSelectedOptions,\n    selectedFavoriteCategory: _ctx.selectedFirstFavoriteCategory,\n    imagesForFirstCategory: $options.imagesForFirstCategory,\n    imagesForSecondCategory: $options.imagesForSecondCategory,\n    onExerciseComplete: $options.handleExerciseComplete,\n    onAssignFirstCategory: $options.handleAssignFirstCategory,\n    onExercise2Complete: $options.handleExercise2Complete,\n    onAssignSecondCategory: $options.handleAssignSecondCategory,\n    onExercise4Complete: $options.handleExercise4Complete,\n    onExercise5Complete: $options.handleExercise5Complete\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, [\"appData\", \"images\", \"firstOptions\", \"firstSelectedOptions\", \"secondOptions\", \"secondSelectedOptions\", \"selectedFavoriteCategory\", \"imagesForFirstCategory\", \"imagesForSecondCategory\", \"onExerciseComplete\", \"onAssignFirstCategory\", \"onExercise2Complete\", \"onAssignSecondCategory\", \"onExercise4Complete\", \"onExercise5Complete\"]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$options","currentExerciseHeading","_createBlock","_resolveDynamicComponent","currentExerciseComponent","appData","$data","images","firstOptions","firstSelectedOptions","secondOptions","secondSelectedOptions","selectedFavoriteCategory","_ctx","selectedFirstFavoriteCategory","imagesForFirstCategory","imagesForSecondCategory","onExerciseComplete","handleExerciseComplete","onAssignFirstCategory","handleAssignFirstCategory","onExercise2Complete","handleExercise2Complete","onAssignSecondCategory","handleAssignSecondCategory","onExercise4Complete","handleExercise4Complete","onExercise5Complete","handleExercise5Complete"],"sources":["/Users/stanley/Documents/Projecten/Archief/2023/mariendael-kunstquiz/kunstquiz/interactive-image-categorization/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h1>{{ currentExerciseHeading }}</h1>\n\n    <component\n      :is=\"currentExerciseComponent\"\n      :appData=\"appData\"\n      :images=\"appData.images\"\n      :firstOptions=\"appData.firstOptions\"\n      :firstSelectedOptions=\"appData.firstSelectedOptions\"\n      :secondOptions=\"appData.secondOptions\"\n      :secondSelectedOptions=\"appData.secondSelectedOptions\"\n      :selectedFavoriteCategory=\"selectedFirstFavoriteCategory\"\n      :imagesForFirstCategory=\"imagesForFirstCategory\"\n      :imagesForSecondCategory=\"imagesForSecondCategory\"\n      @exercise-complete=\"handleExerciseComplete\"\n      @assign-first-category=\"handleAssignFirstCategory\"\n      @exercise-2-complete=\"handleExercise2Complete\"\n      @assign-second-category=\"handleAssignSecondCategory\"\n      @exercise-4-complete=\"handleExercise4Complete\"\n      @exercise-5-complete=\"handleExercise5Complete\"\n    />\n  </div>\n</template>\n\n<script>\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\n\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen,\n  },\n  data() {\n    return {\n      currentExercise: 1,\n      appData: {\n        images: imageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null,\n        })),\n        firstOptions: [\n          { label: '🧠 Knap gemaakt!', value: 'category-1' },\n          { label: '🤩 Wat mooi!', value: 'category-2' },\n          { label: '🥴 Lelijk.', value: 'category-3' },\n          { label: '💸 Vast erg duur...', value: 'category-4' },\n          { label: '🥱 Dat kan ik ook.', value: 'category-5' },\n          { label: '🤔 Dit zet me aan het denken', value: 'category-6' },\n          { label: '🔍 Hier wil ik meer over weten.', value: 'category-5' },\n          // Define categories for Exercise 1 here\n        ],\n        firstSelectedOptions: [], // Initialize with empty options\n        firstFavoriteCategory: '',\n        firstMotivation: '',\n        firstImageSelection: [],\n        secondOptions: [\n          { label: 'Hier zou ik meer van willen zien.', value: 'category-A' },\n          { label: 'Ik zou dit wel willen kunnen maken.', value: 'category-B' },\n          { label: 'Ik wil hier alles van weten', value: 'category-C' },\n          { label: 'Deze afbeelding past toch niet bij mijn keuze', value: 'category-D' },\n          // Define categories for Exercise 3 here\n        ],\n        secondSelectedOptions: [], // Initialize with empty options\n        secondFavoriteCategory: '',\n        secondMotivation: '',\n        secondImageSelection: [],\n        favoriteImage: '',\n        imageMotivation: '',\n      },\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen',\n      };\n\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      if (this.appData.firstFavoriteCategory) {\n        return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n      }\n      return [];\n    },\n    imagesForSecondCategory() {\n      if (this.appData.secondFavoriteCategory) {\n        return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n      }\n      return [];\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Opdracht 1: Categoriseer de afbeeldingen';\n        case 2:\n          return 'Opdracht 2: Selecteer een categorie om dieper op in te gaan';\n        case 3:\n          return 'Opdracht 3: Sorteer de afbeeldingen onder de volgende categorieën';\n        case 4:\n          return 'Opdracht 4: Kies hieruit de categorie die je het meest aanspreekt';\n        case 5:\n          return 'Opdracht 5: Kies de afbeelding die het meest met je doet';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Het Resultaat';\n        default:\n          return 'Onbekende Opdracht';\n      }\n    },\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Find the corresponding option in firstOptions\n      const selectedOption = this.appData.firstOptions.find(option => option.value === category);\n\n      // Add the selected option to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.some(option => option.value === category)) {\n        this.appData.firstSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise2Complete({ firstFavoriteCategory, firstMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.firstFavoriteCategory = firstFavoriteCategory; // Example: \"Category 2\"\n      this.appData.firstMotivation = firstMotivation;\n      \n      // Update firstImageSelection based on firstFavoriteCategory\n      this.appData.firstImageSelection = this.appData.images.filter(image => image.firstCategory === firstFavoriteCategory.value);\n\n      this.currentExercise++;\n    },\n\n    handleAssignSecondCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].secondCategory = category;\n\n      // Find the corresponding option in secondOptions\n      const selectedOption = this.appData.secondOptions.find(option => option.value === category);\n\n      // Add the selected option to secondSelectedOptions (without duplicates)\n      if (!this.appData.secondSelectedOptions.some(option => option.value === category)) {\n        this.appData.secondSelectedOptions.push(selectedOption);\n      }\n    },\n    handleExercise4Complete({ secondFavoriteCategory, secondMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.secondFavoriteCategory = secondFavoriteCategory; // Example: \"Category B\"\n      this.appData.secondMotivation = secondMotivation;\n\n      // Update secondImageSelection based on secondFavoriteCategory\n      this.appData.secondImageSelection = this.appData.images.filter(image => image.secondCategory === secondFavoriteCategory.value);\n\n      this.currentExercise++;\n    },\n\n    handleExercise5Complete({ favoriteImage, imageMotivation }) {\n      // Update the corresponding properties in the appData object\n      this.appData.favoriteImage = favoriteImage;\n      this.appData.imageMotivation = imageMotivation;\n\n      // Advance to the result summary screen\n      this.currentExercise = 'summary';\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    },\n  },\n};\n</script>\n\n<style>\n\n.app {\n  font-family: Arial, sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.app-heading {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\nimg {\n  height: 200px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;uBAAhBC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,CAAqC,YAAAC,gBAAA,CAA9BC,QAAA,CAAAC,sBAAsB,mB,cAE7BC,YAAA,CAiBEC,wBAAA,CAhBKH,QAAA,CAAAI,wBAAwB;IAC5BC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAChBE,MAAM,EAAED,KAAA,CAAAD,OAAO,CAACE,MAAM;IACtBC,YAAY,EAAEF,KAAA,CAAAD,OAAO,CAACG,YAAY;IAClCC,oBAAoB,EAAEH,KAAA,CAAAD,OAAO,CAACI,oBAAoB;IAClDC,aAAa,EAAEJ,KAAA,CAAAD,OAAO,CAACK,aAAa;IACpCC,qBAAqB,EAAEL,KAAA,CAAAD,OAAO,CAACM,qBAAqB;IACpDC,wBAAwB,EAAEC,IAAA,CAAAC,6BAA6B;IACvDC,sBAAsB,EAAEf,QAAA,CAAAe,sBAAsB;IAC9CC,uBAAuB,EAAEhB,QAAA,CAAAgB,uBAAuB;IAChDC,kBAAiB,EAAEjB,QAAA,CAAAkB,sBAAsB;IACzCC,qBAAqB,EAAEnB,QAAA,CAAAoB,yBAAyB;IAChDC,mBAAmB,EAAErB,QAAA,CAAAsB,uBAAuB;IAC5CC,sBAAsB,EAAEvB,QAAA,CAAAwB,0BAA0B;IAClDC,mBAAmB,EAAEzB,QAAA,CAAA0B,uBAAuB;IAC5CC,mBAAmB,EAAE3B,QAAA,CAAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
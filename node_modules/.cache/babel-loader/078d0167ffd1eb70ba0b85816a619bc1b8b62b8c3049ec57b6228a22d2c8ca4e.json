{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($options.currentExerciseHeading), 1 /* TEXT */), (_openBlock(), _createBlock(_resolveDynamicComponent($options.currentExerciseComponent), {\n    appData: $data.appData,\n    images: $data.appData.images,\n    firstOptions: $data.appData.firstOptions,\n    secondOptions: $data.appData.secondOptions,\n    imagesForFirstCategory: $options.imagesForFirstCategory,\n    imagesForSecondCategory: $options.imagesForSecondCategory,\n    onExerciseComplete: $options.handleExerciseComplete,\n    onAssignFirstCategory: $options.handleAssignFirstCategory\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, [\"appData\", \"images\", \"firstOptions\", \"secondOptions\", \"imagesForFirstCategory\", \"imagesForSecondCategory\", \"onExerciseComplete\", \"onAssignFirstCategory\"]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$options","currentExerciseHeading","_createBlock","_resolveDynamicComponent","currentExerciseComponent","appData","$data","images","firstOptions","secondOptions","imagesForFirstCategory","imagesForSecondCategory","onExerciseComplete","handleExerciseComplete","onAssignFirstCategory","handleAssignFirstCategory"],"sources":["/Users/stanley/Documents/Projecten/Archief/2023/mariendael-kunstquiz/kunstquiz/interactive-image-categorization/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h1>{{ currentExerciseHeading }}</h1>\n\n    <component\n      :is=\"currentExerciseComponent\"\n      :appData=\"appData\"\n      :images=\"appData.images\"\n      :firstOptions=\"appData.firstOptions\"\n      :secondOptions=\"appData.secondOptions\"\n      :imagesForFirstCategory=\"imagesForFirstCategory\"\n      :imagesForSecondCategory=\"imagesForSecondCategory\"\n      @exercise-complete=\"handleExerciseComplete\"\n      @assign-first-category=\"handleAssignFirstCategory\"\n    />\n  </div>\n</template>\n\n<script>\nimport ExerciseScreen1 from './components/ExerciseScreen1.vue';\nimport ExerciseScreen2 from './components/ExerciseScreen2.vue';\nimport ExerciseScreen3 from './components/ExerciseScreen3.vue';\nimport ExerciseScreen4 from './components/ExerciseScreen4.vue';\nimport ExerciseScreen5 from './components/ExerciseScreen5.vue';\nimport ResultScreen from './components/ResultScreen.vue';\nimport { imageUrls } from './imageLoader';\n\nexport default {\n  components: {\n    ExerciseScreen1,\n    ExerciseScreen2,\n    ExerciseScreen3,\n    ExerciseScreen4,\n    ExerciseScreen5,\n    ResultScreen,\n  },\n  data() {\n    return {\n      currentExercise: 1,\n      appData: {\n        images: imageUrls.map(url => ({\n          url,\n          firstCategory: null,\n          secondCategory: null,\n        })),\n        firstOptions: [\n          { label: 'Category 1', value: 'category-1' },\n          { label: 'Category 2', value: 'category-2' },\n          { label: 'Category 3', value: 'category-3' },\n          { label: 'Category 4', value: 'category-4' },\n          { label: 'Category 5', value: 'category-5' },\n          // Define categories for Exercise 1 here\n        ],\n        firstSelectedOptions: [], // Initialize with empty options\n        secondOptions: [\n          { label: 'Category A', value: 'category-A' },\n          { label: 'Category B', value: 'category-B' },\n          { label: 'Category C', value: 'category-C' },\n          { label: 'Category D', value: 'category-D' },\n          { label: 'Category E', value: 'category-E' },\n          // Define categories for Exercise 3 here\n        ],\n        secondSelectedOptions: [], // Initialize with empty options\n        firstFavoriteCategory: '',\n        secondFavoriteCategory: '',\n        firstMotivation: '',\n        secondMotivation: '',\n      },\n    };\n  },\n  computed: {\n    currentExerciseComponent() {\n      // Define mapping between exercise numbers and component names\n      const componentMap = {\n        1: 'ExerciseScreen1',\n        2: 'ExerciseScreen2',\n        3: 'ExerciseScreen3',\n        4: 'ExerciseScreen4',\n        5: 'ExerciseScreen5',\n        summary: 'ResultScreen',\n      };\n\n      return componentMap[this.currentExercise];\n    },\n    imagesForFirstCategory() {\n      return this.appData.images.filter(image => image.firstCategory === this.appData.firstFavoriteCategory);\n    },\n    imagesForSecondCategory() {\n      return this.appData.images.filter(image => image.secondCategory === this.appData.secondFavoriteCategory);\n    },\n    currentExerciseHeading() {\n      switch (this.currentExercise) {\n        case 1:\n          return 'Exercise 1: Categorize Images';\n        case 2:\n          return 'Exercise 2: Choose Favorite Categories';\n        case 3:\n          return 'Exercise 3: Recategorize Images';\n        case 4:\n          return 'Exercise 4: Recategorize Images';\n        case 5:\n          return 'Exercise 5: Recategorize Images';\n        // ... add headings for other exercises ...\n        case 'summary':\n          return 'Result Summary';\n        default:\n          return 'Unknown Exercise';\n      }\n    },\n  },\n  methods: {\n    handleAssignFirstCategory(category, imageIndex) {\n      // Update the selected category in appData for the corresponding image\n      this.appData.images[imageIndex].firstCategory = category;\n\n      // Add the selected category to firstSelectedOptions (without duplicates)\n      if (!this.appData.firstSelectedOptions.includes(category)) {\n        this.appData.firstSelectedOptions.push(category);\n      }\n    },\n    handleExerciseComplete() {\n      this.currentExercise++;\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;uBAAhBC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAAqC,YAAAC,gBAAA,CAA9BC,QAAA,CAAAC,sBAAsB,mB,cAE7BC,YAAA,CAUEC,wBAAA,CATKH,QAAA,CAAAI,wBAAwB;IAC5BC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAChBE,MAAM,EAAED,KAAA,CAAAD,OAAO,CAACE,MAAM;IACtBC,YAAY,EAAEF,KAAA,CAAAD,OAAO,CAACG,YAAY;IAClCC,aAAa,EAAEH,KAAA,CAAAD,OAAO,CAACI,aAAa;IACpCC,sBAAsB,EAAEV,QAAA,CAAAU,sBAAsB;IAC9CC,uBAAuB,EAAEX,QAAA,CAAAW,uBAAuB;IAChDC,kBAAiB,EAAEZ,QAAA,CAAAa,sBAAsB;IACzCC,qBAAqB,EAAEd,QAAA,CAAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}